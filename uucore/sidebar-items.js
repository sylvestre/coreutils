initSidebarItems({"enum":[["ConversionResult",""],["InvalidEncodingHandling",""]],"externcrate":[["libc",""]],"fn":[["args",""],["args_os",""]],"macro":[["app",""],["crash","Display the provided error message, then `exit()` with the provided exit code"],["crash_if_err","Unwraps the Result. Instead of panicking, it exists the program with the provided exit code."],["executable","Deduce the name of the binary from the current source code filename."],["exit","Calls `exit()` with the provided exit code."],["has",""],["msg_expects_no_more_than_one_of",""],["msg_expects_one_of",""],["msg_invalid_input",""],["msg_invalid_opt_use",""],["msg_opt_invalid_should_be",""],["msg_opt_only_usable_if",""],["return_if_err","Unwraps the Result. Instead of panicking, it shows the error and then returns from the function with the provided exit code. Assumes the current function returns an i32 value."],["safe_unwrap","Unwraps the Result. Instead of panicking, it exists the program with exit code 1."],["safe_write",""],["safe_writeln",""],["show_error","Show an error to stderr in a similar style to GNU coreutils."],["show_error_custom_description","Show a warning to stderr in a similar style to GNU coreutils."],["show_usage_error","Show a bad invocation help message in a similar style to GNU coreutils."],["show_warning",""],["snippet_list_join_or",""],["snippet_list_join_oxford",""]],"mod":[["backup_control",""],["coreopts",""],["encoding",""],["entries","Get password/group file entry"],["fs",""],["fsext",""],["mode",""],["os",""],["panic",""],["parse_size",""],["parse_time",""],["perms",""],["process",""],["ranges",""],["ringbuffer","A fixed-size ring buffer."],["signals",""],["utmpx","Aims to provide platform-independent methods to obtain login records"],["zero_copy",""]],"trait":[["Args",""]]});